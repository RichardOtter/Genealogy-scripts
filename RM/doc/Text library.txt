
=========================================================================DIV80==
Compatibility
Compatibility

Tested with RootsMagic v 10
Tested with Python for Windows v3.13   64bit

The py file has not been tested on MacOS but could probably be easily
modified to work on MacOS with Python version 3 installed.

=========================================================================DIV80==
Backups large changes
Backups

VERY IMPORTANT
This utility makes changes to the RM database file. It can change a large number
of data items in a single run depending on the settings specified.
You will likely not be satisfied with your first run of the utility and you will
want to try again, perhaps several times, each time making changes to your
configuration file. 
You must run this script on a copy of your database file and have at least
multiple known-good backups.

Read about additional considerations in the Precautions section below.

=========================================================================DIV80==
Backups small changes
Backups

IMPORTANT
This utility modifies the RM database file.
You should run this script on a copy of your database file or at least
have multiple known-good backups until you are confident that the changes made
are the ones desired.

=========================================================================DIV80==
Backups read only
Backups

IMPORTANT
This script only reads the database file and makes no changes.
However, you should run this script on a copy of your database file or at least
have multiple known-good backups until you are confident that the the database
remains intact after use. At that point, run this utility of your
"production" database.

=========================================================================DIV80==
Overview
Overview

This program is what is called a "command line utility". 
It is in the form of a single file with a "py" extension, referred to 
below, as "MainScriptFile.py".
Most input to the utility is through the configuration file and sometimes
the command line console window.
The the default name of the configuration file ("config file") is "RM-Python-config.ini"
and it should also be located in the same folder as the MainScriptFile py script.
At a minimum, the config gives the name and location of the database on
which to operate. One config file can be shared among my other RM utilities.
Each utility will extract the information it needs from the config file.

To install and use the script for the first time:

*  Install Python for Windows x64  -see APPENDIX below

*  Create a new folder on your disk.
   This will be called the "working folder".

*  Make a copy of your database, move the copy into the working folder.
   Rename the copy to TEST.rmtree

*  Copy these files and the folder from the downloaded zip file to the working folder-
      file:    MainScriptFile.py
      folder:  RMpy
      file:    RM-Python-config.ini

*  Edit the config file, RM-Python-config.ini, that was copied into the working folder.

   The utility needs to know where the RM database file is located, the output
   report file name and its location.

*  Double click the MainScriptFile.py ile to run the utility. 

*  A summary report will be displayed in NotePad.

*****  Details follow below. *****


=========================================================================DIV80==
APPENDIX  Python install
APPENDIX  Python install

Either
install Python from the Microsoft Store
or
download and install from Python.org web site

From Microsoft Store
Run a command in Windows by pressing the keyboard key combination
"Windows + R", then in the small window, type Python.
Windows store will open in your browser and you will be be shown
the various versions of Python.
Click the Get button for the latest version.

Web site download and install
Download the current version of Python 3, ( or see direct link below
for the current as of this date)
https://www.python.org/downloads/windows/

Click on the link near the top of page. Then ...
Find the link near bottom left side of the page, in the "Stable Releases"
section, labeled "Download Windows installer (64-bit)"
Click it and save the installer.

Direct link to recent (as of 2024-12) version installer-
https://www.python.org/ftp/python/3.13.1/python-3.13.1-amd64.exe

The Python installation requires about 100 Mbytes.
It is easily and cleanly removed using the standard method found in
Windows=>Settings

Run the Python installer selecting all default options.


=========================================================================DIV80==
APPENDIX  unifuzz64.dll download
APPENDIX  unifuzz64.dll download

direct download:
https://sqlitetoolsforrootsmagic.com/wp-content/uploads/2018/05/unifuzz64.dll

the link above is found in this context-
https://sqlitetoolsforrootsmagic.com/rmnocase-faking-it-in-sqlite-expert-command-line-shell-et-al/

The SQLiteToolsforRootsMagic website has been around for many years and is run
by a trusted RM user. Many posts to public RootsMagic user forums mention use
of unifuzz64.dll from the SQLiteToolsforRootsMagic website.

    MD5 hash values are used to confirm the identity and integrity of files.

    MD5 hash                            File size         File name
    06a1f485b0fae62caa80850a8c7fd7c2    256,406 bytes    unifuzz64.dll


=========================================================================DIV80==
APPENDIX  Config file: location, contents and editing
APPENDIX  Config file: location, contents and editing

Name and location
The RM-Python-config.ini file will be recognized as the configuration file when
placed in the same directory as the Python script (.py file) for the utility.
The file uses the standard ini file format.

The configuration file name and location can also be specified on the command-line
as an argument to the script. This argument overrides the default configuration
file located in the current directory if it exists.

For example, if the script "RMutility.py" is executed from the folder
"C:\Users\me\Joe", it will use the configuration file 
 C:\Users\me\Joe\RM-Python-config.ini" if it exists.
However, if the utility is run with an explicit argument, such as:
  RMutility.py "C:\Users\me\Joe\documents\RM-Python-config.ini"
then the specified configuration file will be used instead of the default
Note that the file name is also not restricted to the default. 
For instance, running the utility with:
  RMutility.py "C:\Users\me\Joe\documents\Rmine.ini"
will instruct the utility to read Rmine.ini for its configuration parameters.

The configuration file might be named so as to convey its purpose.
A Windows shortcut can also be constructed with the above described argument
to allow execution from the desktop with a double mouse click.

Editing
Use any text editor to edit the configuration file. The builtin-to-Windows
app "Notepad" works well. 
To edit the configuration file, first open the Notepad app and then use the
mouse to drag the configuration file onto the open Notepad window

Contents
The config file is made up of the elements: Sections, Keys, Values and
Comments. The names in square brackets are Section Names that identify the start
of a section. A Section contains Key = Value pairs. Names on the left of
the = sign are Keys. Text on the right side of the = is the Value of the Key.
Comment lines start with # and are only included to help the user read and
understand the file.


KEYs used by all of the RM utilities:

[FILE_PATHS]
DB_PATH         = TEST.rmtree
REPORT_FILE_PATH  = Report_ColorFromGroup.txt
REPORT_FILE_DISPLAY_APP  = C:\Windows\system32\Notepad.exe

These KEYS are all in the [FILE_PATHS] section and all require file paths as values.

The file path may be absolute, as in REPORT_FILE_DISPLAY_APP
above, or it may be relative to the current directory, as in DB_PATH and 
REPORT_FILE_PATH above.

The DB_PATH points to the database that is to be analyzed/modified.
See the sections "Backups" and "Running the utility in detail", above, for help
in deciding which database to use. New users will always want to point to a
copy of the main database.

The utilities all generate a textual report file. The file's name
and location can be specified by REPORT_FILE_PATH

If REPORT_FILE_DISPLAY_APP is specified, then the report file will be
automatically displayed by the named application.


Encoding
If there are any non-ASCII characters in the config file then the file must be
saved in UTF-8 format, with no byte order mark (BOM).
The included sample config file has an accented Ã¤ in the first line comment to
force it to be in the correct format.
File format is an option in the "Save file" dialog box in NotePad.


=========================================================================DIV80==
APPENDIX  Troubleshooting
APPENDIX  Troubleshooting

=========-
No Report File displayed

If the report is created, but not displayed, check the config
file line- REPORT_FILE_DISPLAY_APP

If no report file is generated, look at the black command
console window for error messages that will help you fix the problem.
There may be something wrong with the config file line- REPORT_FILE_PATH

If the black console windows displays the message-
RM-Python-config.ini file contains a format error
See the section below.

If no report file is generated and the black command console window closes
before you can read it, try first opening a command line console and then
running the py file from the command line. The window will not close
and you'll be able to read any error messages.

=========-
Error message:
RM-Python-config.ini file contains a format error

Start over with the supplied config file and make sure that works, Then make your
edits one by one to identify the problem.
You may want to look at- https://en.wikipedia.org/wiki/INI_file




=========================================================================DIV80==
Precautions before using the modified database
Precautions before using the modified database

Once you are satisfied with the results of the modifications made by this
software, don't hurry to start use the resulting file for research.
Continue your work for a week or so using the original database to allow
further consideration. Then run the utility again with your perfected config
file on a new copy of your now-current database and then use the modified
database as your normal work file.
The week delay will give you time to think about it. If you start
using the newly modified database immediately, you'll lose work if you miss
a problem and have to revert to a backup.


=========================================================================DIV80==
